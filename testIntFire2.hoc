load_file("nrngui.hoc")

objectvar g[20]
ngraph = 0
proc addgraph() { local ii		 
	ngraph = ngraph+1
	ii = ngraph-1
	g[ii] = new Graph()
	g[ii].size(0,tstop,$2,$3)
	g[ii].xaxis()
	g[ii].yaxis()
	g[ii].addexpr($s1,1,0)           
	g[ii].save_name("graphList[0].") 
        graphList[0].append(g[ii])
}


objref LIAF, IAF

IAF = new IntFire1(0.5)
IAF.tau = 20
IAF.refrac = 0

LIAF = new IntFire2(0.5)
LIAF.taum = 20
LIAF.taus = 10
LIAF.ib = 0


objref StimTrigger

StimTrigger = new NetStim(0.5)
StimTrigger.start =10
StimTrigger.interval = 5
StimTrigger.number = 180
StimTrigger.noise= 0.4

objref NetInputL, NetInputN, StimInput, timevec, idvec, rasterGraph, nil

NetInputL = new NetCon(StimTrigger, LIAF, 0.1, 0, 0.3)
NetInputN = new NetCon(StimTrigger, IAF, 0.1, 0, 0.3)

StimInput = new NetCon(StimTrigger, nil)
timevec = new Vector()
idvec = new Vector()
rasterGraph = new Graph()

StimInput.record(timevec, idvec, 1)

objref NetOutputL, NetOutputN

NetOutputN = new NetCon(IAF, nil)
NetOutputN.record(timevec, idvec, 2)
NetOutputL = new NetCon(LIAF, nil)
NetOutputL.record(timevec, idvec, 3)

rasterGraph.size(0, tstop, 0, 5)


addgraph("LIAF.M", -2, 3)
addgraph("IAF.M", -2, 3)


dt = 0.025
tstop = 150
proc go() {
    init()
    run()
    idvec.mark(rasterGraph, timevec, "|")
}